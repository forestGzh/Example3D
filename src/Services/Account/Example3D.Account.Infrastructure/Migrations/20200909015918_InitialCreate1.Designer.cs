// <auto-generated />
using System;
using Example3D.Account.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Example3D.Account.Infrastructure.Migrations
{
    [DbContext(typeof(DomainDbContext))]
    [Migration("20200909015918_InitialCreate1")]
    partial class InitialCreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Example3D.Account.Domain.AggregatesModel.AccountAggregate.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("Example3D.Account.Domain.AggregatesModel.AccountAggregate.UserAccount", b =>
                {
                    b.OwnsOne("Example3D.Account.Domain.AggregatesModel.AccountAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserAccountId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                                .HasMaxLength(10);

                            b1.Property<string>("Country")
                                .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                                .HasMaxLength(10);

                            b1.Property<string>("Street")
                                .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                                .HasMaxLength(10);

                            b1.HasKey("UserAccountId");

                            b1.ToTable("account");

                            b1.WithOwner()
                                .HasForeignKey("UserAccountId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
